import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";
import Navbar from "./components/Navbar";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default function RootLayout({
  children,
  params,
}: Readonly<{ children: React.ReactNode; params: { slug?: string[] } }>) {
  // Definir rutas donde NO se debe mostrar la Navbar
  const hiddenNavbarRoutes = ["/contacto"];

  // Obtener la ruta actual en SSR, asegurando que todas las rutas se consideren
  const currentPath = params?.slug ? `/${params.slug.join("/")}` : "/";

  return (
    <html lang="en">
      <body className={`${geistSans.variable} ${geistMono.variable} antialiased`}>
        {/* Renderizar la Navbar solo si la ruta no está en la lista oculta */}
        {!hiddenNavbarRoutes.includes(currentPath) && (
          <div className="fixed top-0 left-0 w-full z-50">
            <Navbar />
          </div>
        )}

        {/* Aseguramos que el contenido no se vea afectado si la navbar está oculta */}
        <div className={`${hiddenNavbarRoutes.includes(currentPath) ? "" : "mb-18"}`}>
          {children}
        </div>
      </body>
    </html>
  );
}
